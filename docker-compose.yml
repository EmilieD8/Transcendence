version: '3.8'

services:

  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    command: gunicorn pong.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
    develop:
      watch:
        - path: ./app/
          target: /home/app/web/
          action: sync+restart
    networks:
      - localhost

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    networks:
      - localhost

  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 9999:80
    depends_on:
      - web
    networks:
      - localhost


#################monitoring##########################
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
      - prometheus-data:/prometheus
    networks:
      - localhost

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.0
    container_name: prometheus-nginx-exporter
    env_file:
      .env
    command:
      --nginx.scrape-uri=http://nginx:80/metrics
      --web.telemetry-path=/metrics
    expose: 
      - 9113
    depends_on:
      - prometheus
    networks:
      - localhost

  prometheus-node-exporter:
    image: prom/node-exporter:latest
    container_name: prometheus-node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - localhost
    privileged: true
    depends_on:
      - prometheus
    expose:
      - 9100

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    env_file:
      .env
    networks:
      - localhost
  
  alertmanager:
    image: quay.io/prometheus/alertmanager:latest
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes: 
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/data
    networks:
      - localhost

volumes:
  postgres_data:
  static_volume:
  prometheus-data:
    # driver_opts:
    #   o: bind
    #   type: none
    #   device: /home/${USER}/tasks/my_github/transcendence/devops_data/prometheus #change to local env
  grafana-data:
    # driver_opts:
    #   o: bind
    #   type: none
    #   device: /home/${USER}/tasks/my_github/transcendence/devops_data/grafana #change to local env
  alertmanager-data:
    # driver_opts:
    #   o: bind
    #   type: none
    #   device: /home/${USER}/tasks/my_github/transcendence/alertmanager #change to local env


networks:
    localhost:
        name: localhost
        external: false